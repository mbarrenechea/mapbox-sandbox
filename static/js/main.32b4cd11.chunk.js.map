{"version":3,"sources":["components/bitmap-layer/index.js","components/bitmap-layer/bitmap-layer-vertex.js","components/bitmap-layer/bitmap-layer-fragment.js","components/tile-layer/utils/tile.js","components/tile-layer/utils/viewport-util.js","components/tile-layer/utils/tile-cache.js","components/tile-layer/index.js","components/map/index.js","App.js","serviceWorker.js","index.js"],"names":["fp64LowPart","fp64","BitmapLayer","vs","fs","modules","this","use64bitProjection","positions","getAttributeManager","add","size","update","calculatePositions","value","Float32Array","positions64xyLow","calculatePositions64xyLow","props","_ref","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","image","loadTexture","attributeManager","bitmapBounds","_getPositionsFromBounds","invalidate","Array","Number","isFinite","i","length","Model","Object","assign","getShaders","id","shaderCache","geometry","Geometry","drawMode","GL","TRIANGLE_FAN","vertexCount","attributes","texCoords","isInstanced","uniforms","_ref2","_this$state","bitmapTexture","_this$props","desaturate","transparentColor","tintColor","startDate","endDate","zoom","render","_parameters","_this","textureOptions","parameters","defineProperty","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","mipmaps","loadImage","then","data","Texture2D","objectSpread","Image","HTMLCanvasElement","_ref3","set","attribute","isFP64","use64bitPositions","constant","map","Layer","layerName","defaultProps","type","compare","min","max","Tile","getTileData","x","y","z","onGetTileDataError","classCallCheck","isVisible","_data","_isLoaded","_loader","_loadData","buffers","catch","err","tile","m","Math","pow","floor","Promise","resolve","TILE_SIZE","pixelsToTileIndex","a","getAdjustedTileIndex","adjustedZ","TileCache","maxSize","maxZoom","minZoom","_getTileData","_maxSize","_cache","Map","parseInt","_maxZoom","_minZoom","clear","viewport","onUpdate","_markOldTiles","tileIndices","bbox","corners","unproject","width","height","reduce","minLng","p","minLat","maxLng","maxLat","getBoundingBox","constructor","_lngLatToWorld$map","lngLatToWorld","scale","_lngLatToWorld$map2","slicedToArray","minX","minY","_lngLatToWorld$map3","_lngLatToWorld$map4","maxX","maxY","indices","push","getTileIndices","viewportTiles","Set","forEach","cachedTile","some","isOverlapped","tileIndex","_getTile","tileId","_getTileId","_resizeCache","from","sort","t1","t2","iterator","Symbol","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","return","get","concat","renderSubLayers","onDataLoaded","console","error","maxCacheSize","TileLayer","tiles","tileCache","isLoaded","somethingChanged","updateTriggersChanged","all","finalize","viewportChanged","getLayerZoomLevel","currTiles","filter","allCurrTilesLoaded","every","info","_ref4","sourceLayer","_this$props2","n","PI","atan","exp","_this2","_this$props3","visible","zoomLevel","objectWithoutProperties","topLeft","tile2long","tile2lat","topRight","bounds","CompositeLayer","INITIAL_VIEW_STATE","longitude","latitude","_React$Component","_getPrototypeOf2","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","_onWebGLInitialized","_onMapLoad","_map","deck","_deck","addLayer","MapboxLayer","inherits","createClass","key","layers","ScatterplotLayer","position","getPosition","d","getRadius","getFillColor","stroked","getLineColor","mapSource","fetch","response","blob","src","URL","createObjectURL","react_default","createElement","esm","ref","initialViewState","controller","onWebGLInitialized","dist_esm","getMap","mapStyle","mapboxApiAccessToken","onLoad","React","Component","App","components_map","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32b4cd11.chunk.js","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global Image, HTMLCanvasElement */\nimport GL from '@luma.gl/constants';\nimport {Layer} from '@deck.gl/core';\nimport {Model, Geometry, Texture2D, fp64} from 'luma.gl';\nimport {loadImage} from '@loaders.gl/core';\nimport vs from './bitmap-layer-vertex';\nimport fs from './bitmap-layer-fragment';\n\nconst {fp64LowPart} = fp64;\n\nconst defaultProps = {\n  image: null,\n  bitmapBounds: {type: 'array', value: [1, 0, 0, 1], compare: true},\n  fp64: false,\n\n  desaturate: {type: 'number', min: 0, max: 1, value: 0},\n  // More context: because of the blending mode we're using for ground imagery,\n  // alpha is not effective when blending the bitmap layers with the base map.\n  // Instead we need to manually dim/blend rgb values with a background color.\n  transparentColor: {type: 'color', value: [0, 0, 0, 0]},\n  tintColor: {type: 'color', value: [255, 255, 255]}\n};\n\n/*\n * @class\n * @param {object} props\n * @param {number} props.transparentColor - color to interpret transparency to\n * @param {number} props.tintColor - color bias\n */\nexport default class BitmapLayer extends Layer {\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /*\n      -1,1  ---  1,1\n        |         |\n      -1,-1 --- 1,-1\n     */\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    attributeManager.add({\n      positions: {\n        size: 3,\n        update: this.calculatePositions,\n        value: new Float32Array(positions)\n      },\n      positions64xyLow: {\n        size: 3,\n        update: this.calculatePositions64xyLow,\n        value: new Float32Array(positions)\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    // setup model first\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n\n    if (props.image !== oldProps.image) {\n      this.loadTexture();\n    }\n\n    const attributeManager = this.getAttributeManager();\n\n    if (props.bitmapBounds !== oldProps.bitmapBounds) {\n      this.setState({\n        positions: this._getPositionsFromBounds(props.bitmapBounds)\n      });\n      attributeManager.invalidate('positions');\n      attributeManager.invalidate('positions64xyLow');\n    }\n  }\n\n  _getPositionsFromBounds(bitmapBounds) {\n    const positions = new Array(12);\n    // bitmapBounds as [minX, minY, maxX, maxY]\n    if (Number.isFinite(bitmapBounds[0])) {\n      /*\n        (minX0, maxY3) ---- (maxX2, maxY3)\n               |                  |\n               |                  |\n               |                  |\n        (minX0, minY1) ---- (maxX2, minY1)\n     */\n      positions[0] = bitmapBounds[0];\n      positions[1] = bitmapBounds[1];\n      positions[2] = 0;\n\n      positions[3] = bitmapBounds[0];\n      positions[4] = bitmapBounds[3];\n      positions[5] = 0;\n\n      positions[6] = bitmapBounds[2];\n      positions[7] = bitmapBounds[3];\n      positions[8] = 0;\n\n      positions[9] = bitmapBounds[2];\n      positions[10] = bitmapBounds[1];\n      positions[11] = 0;\n    } else {\n      // [[minX, minY], [minX, maxY], [maxX, maxY], [maxX, minY]]\n      for (let i = 0; i < bitmapBounds.length; i++) {\n        positions[i * 3 + 0] = bitmapBounds[i][0];\n        positions[i * 3 + 1] = bitmapBounds[i][1];\n        positions[i * 3 + 2] = bitmapBounds[i][2] || 0;\n      }\n    }\n\n    return positions;\n  }\n\n  _getModel(gl) {\n    if (!gl) {\n      return null;\n    }\n\n    /*\n      0,1 --- 1,1\n       |       |\n      0,0 --- 1,0\n    */\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        shaderCache: this.context.shaderCache,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          vertexCount: 4,\n          attributes: {\n            texCoords: new Float32Array([0, 0, 0, 1, 1, 1, 1, 0])\n          }\n        }),\n        isInstanced: false\n      })\n    );\n  }\n\n  draw({uniforms}) {\n    const {bitmapTexture, model} = this.state;\n    const {desaturate, transparentColor, tintColor, startDate, endDate, zoom} = this.props;\n\n    // // TODO fix zFighting\n    // Render the image\n    if (bitmapTexture && model) {\n      model.render(\n        Object.assign({}, uniforms, {\n          bitmapTexture,\n          desaturate,\n          transparentColor,\n          tintColor,\n          startDate,\n          endDate,\n          zoom\n        })\n      );\n    }\n  }\n\n  loadTexture() {\n    const {gl} = this.context;\n    const {image} = this.props;\n\n    const textureOptions = {\n      parameters: {\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n      },\n      mipmaps: false\n    }\n\n    if (typeof image === 'string') {\n      loadImage(image).then(data => {\n        this.setState({bitmapTexture: new Texture2D(gl, { \n          data, \n          ...textureOptions\n        })});\n      });\n    } else if (image instanceof Texture2D) {\n      this.setState({bitmapTexture: image});\n    } else if (\n      // browser object\n      image instanceof Image ||\n      image instanceof HTMLCanvasElement\n    ) {\n      this.setState({bitmapTexture: new Texture2D(gl, {\n        data: image,\n        ...textureOptions \n      })});\n    }\n  }\n\n  calculatePositions({value}) {\n    const {positions} = this.state;\n    value.set(positions);\n  }\n\n  calculatePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {value} = attribute;\n    value.set(this.state.positions.map(fp64LowPart));\n  }\n}\n\nBitmapLayer.layerName = 'BitmapLayer';\nBitmapLayer.defaultProps = defaultProps;","export default `\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec2 positions64xyLow;\n\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  gl_Position = project_position_to_clipspace(positions, positions64xyLow, vec3(0.0));\n \n  vTexCoord = texCoords;\n \n  picking_setPickingColor(vec3(0., 0., 1.));\n}\n`;\n","export default `\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nvarying vec2 vTexCoord;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\nuniform float startDate;\nuniform float endDate;\nuniform float zoom;\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor / 255.0;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  return mix(transparentColor / 255.0, vec4(color, 1.0), alpha);\n}\n\n// decode loss layer\nvec4 decodeFunction(vec3 color, float year) {\n  float intensity = color.r * 255.;\n  // float exponent = zoom > 11. ? 0.3 + (zoom - 3.) / 20. : 1.;\n\n  if (year >= startDate && year <= endDate && year >= 2001.) {\n    color.r = 220. / 255.;\n    color.g = (72. - zoom + 102. - 3. * intensity / zoom) / 255.;\n    color.b = (33. - zoom + 153. - intensity / zoom) / 255.;\n    return vec4(color, color.r);\n  } else {\n    return vec4(0., 0., 0., 0.);\n  }\n}\n\nvoid main(void) {\n  vec4 bitmapColor = texture2D(bitmapTexture, vTexCoord);\n\n  if ((bitmapColor.r * 255.) < 1.) {\n    discard;\n  }\n\n  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  // use highlight color if this fragment belongs to the selected object.\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n\n  // use picking color if rendering to picking FBO.\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n\n  float year = 2000.0 + (bitmapColor.b * 255.);\n  gl_FragColor = decodeFunction(bitmapColor.rgb, year);\n}\n`;\n","export default class Tile {\n  constructor({getTileData, x, y, z, onGetTileDataError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = true;\n    this.getTileData = getTileData;\n    this._data = null;\n    this._isLoaded = false;\n    this._loader = this._loadData();\n    this.onGetTileDataError = onGetTileDataError;\n  }\n\n  get data() {\n    if (this._data) {\n      return Promise.resolve(this._data);\n    }\n    return this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  _loadData() {\n    const {x, y, z} = this;\n    if (!this.getTileData) {\n      return null;\n    }\n    const getTileDataPromise = this.getTileData({x, y, z});\n    return getTileDataPromise\n      .then(buffers => {\n        this._data = buffers;\n        this._isLoaded = true;\n        return buffers;\n      })\n      .catch(err => {\n        this._isLoaded = true;\n        this.onGetTileDataError(err);\n      });\n  }\n\n  isOverlapped(tile) {\n    const {x, y, z} = this;\n    const m = Math.pow(2, tile.z - z);\n    return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n  }\n}\n","import {lngLatToWorld} from 'viewport-mercator-project';\n\nconst TILE_SIZE = 512;\n\nfunction getBoundingBox(viewport) {\n  const corners = [\n    viewport.unproject([0, 0]),\n    viewport.unproject([viewport.width, 0]),\n    viewport.unproject([0, viewport.height]),\n    viewport.unproject([viewport.width, viewport.height])\n  ];\n\n  return [\n    corners.reduce((minLng, p) => (minLng < p[0] ? minLng : p[0]), 180),\n    corners.reduce((minLat, p) => (minLat < p[1] ? minLat : p[1]), 90),\n    corners.reduce((maxLng, p) => (maxLng > p[0] ? maxLng : p[0]), -180),\n    corners.reduce((maxLat, p) => (maxLat > p[1] ? maxLat : p[1]), -90)\n  ];\n}\n\nfunction pixelsToTileIndex(a) {\n  return Math.floor(a / TILE_SIZE);\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\nexport function getTileIndices(viewport, maxZoom, minZoom) {\n  const z = Math.floor(viewport.zoom);\n  if (minZoom && z < minZoom) {\n    return [];\n  }\n\n  viewport = new viewport.constructor({\n    ...viewport,\n    zoom: z\n  });\n\n  const bbox = getBoundingBox(viewport);\n\n  const [minX, minY] = lngLatToWorld([bbox[0], bbox[3]], viewport.scale).map(pixelsToTileIndex);\n  const [maxX, maxY] = lngLatToWorld([bbox[2], bbox[1]], viewport.scale).map(pixelsToTileIndex);\n\n  const indices = [];\n\n  for (let x = minX; x <= maxX; x++) {\n    for (let y = minY; y <= maxY; y++) {\n      if (maxZoom && z > maxZoom) {\n        indices.push(getAdjustedTileIndex({x, y, z}, maxZoom));\n      } else {\n        indices.push({x, y, z});\n      }\n    }\n  }\n  return indices;\n}\n\n/**\n * Calculates and returns a new tile index {x, y, z}, with z being the given adjustedZ.\n */\nfunction getAdjustedTileIndex({x, y, z}, adjustedZ) {\n  const m = Math.pow(2, z - adjustedZ);\n  return {\n    x: Math.floor(x / m),\n    y: Math.floor(y / m),\n    z: adjustedZ\n  };\n}\n","import Tile from './tile';\nimport {getTileIndices} from './viewport-util';\n\n/**\n * Manages loading and purging of tiles data. This class caches recently visited tiles\n * and only create new tiles if they are present.\n */\n\nexport default class TileCache {\n  /**\n   * Takes in a function that returns tile data, a cache size, and a max and a min zoom level.\n   * Cache size defaults to 5 * number of tiles in the current viewport\n   */\n  constructor({getTileData, maxSize, maxZoom, minZoom, onGetTileDataError}) {\n    // TODO: Instead of hardcode size, we should calculate how much memory left\n    this._getTileData = getTileData;\n    this._maxSize = maxSize;\n    this.onGetTileDataError = onGetTileDataError;\n\n    // Maps tile id in string {z}-{x}-{y} to a Tile object\n    this._cache = new Map();\n\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom) {\n      this._maxZoom = maxZoom;\n    }\n    if (minZoom && parseInt(minZoom, 10) === minZoom) {\n      this._minZoom = minZoom;\n    }\n  }\n\n  /**\n   * Clear the current cache\n   */\n  finalize() {\n    this._cache.clear();\n  }\n\n  /**\n   * Update the cache with the given viewport and triggers callback onUpdate.\n   * @param {*} viewport\n   * @param {*} onUpdate\n   */\n  update(viewport, onUpdate) {\n    const {_cache, _getTileData, _maxSize, _maxZoom, _minZoom} = this;\n    this._markOldTiles();\n    const tileIndices = getTileIndices(viewport, _maxZoom, _minZoom);\n    if (!tileIndices || tileIndices.length === 0) {\n      onUpdate(tileIndices);\n      return;\n    }\n    const viewportTiles = new Set();\n    _cache.forEach(cachedTile => {\n      if (tileIndices.some(tile => cachedTile.isOverlapped(tile))) {\n        cachedTile.isVisible = true;\n        viewportTiles.add(cachedTile);\n      }\n    });\n\n    for (let i = 0; i < tileIndices.length; i++) {\n      const tileIndex = tileIndices[i];\n\n      const {x, y, z} = tileIndex;\n      let tile = this._getTile(x, y, z);\n      if (!tile) {\n        tile = new Tile({\n          getTileData: _getTileData,\n          x,\n          y,\n          z,\n          onGetTileDataError: this.onGetTileDataError\n        });\n      }\n      const tileId = this._getTileId(x, y, z);\n      _cache.set(tileId, tile);\n      viewportTiles.add(tile);\n    }\n\n    // cache size is either the user defined maxSize or 5 * number of current tiles in the viewport.\n    const commonZoomRange = 5;\n    this._resizeCache(_maxSize || commonZoomRange * tileIndices.length);\n    // sort by zoom level so parents tiles don't show up when children tiles are rendered\n    const viewportTilesArray = Array.from(viewportTiles).sort((t1, t2) => t1.z - t2.z);\n    onUpdate(viewportTilesArray);\n  }\n\n  /**\n   * Clear tiles that are not visible when the cache is full\n   */\n  _resizeCache(maxSize) {\n    const {_cache} = this;\n    if (_cache.size > maxSize) {\n      const iterator = _cache[Symbol.iterator]();\n      for (const cachedTile of iterator) {\n        if (_cache.size <= maxSize) {\n          break;\n        }\n        const tileId = cachedTile[0];\n        const tile = cachedTile[1];\n        if (!tile.isVisible) {\n          _cache.delete(tileId);\n        }\n      }\n    }\n  }\n\n  _markOldTiles() {\n    this._cache.forEach(cachedTile => {\n      cachedTile.isVisible = false;\n    });\n  }\n\n  _getTile(x, y, z) {\n    const tileId = this._getTileId(x, y, z);\n    return this._cache.get(tileId);\n  }\n\n  _getTileId(x, y, z) {\n    return `${z}-${x}-${y}`;\n  }\n}\n","import {CompositeLayer} from 'deck.gl';\n\nimport BitmapLayer from 'components/bitmap-layer';\n\nimport TileCache from './utils/tile-cache';\n\nconst defaultProps = {\n  renderSubLayers: props => new BitmapLayer(props),\n  getTileData: ({x, y, z}) => Promise.resolve(null),\n  onDataLoaded: () => {},\n  // eslint-disable-next-line\n  onGetTileDataError: err => console.error(err),\n  maxZoom: null,\n  minZoom: null,\n  maxCacheSize: null\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    const {maxZoom, minZoom, getTileData, onGetTileDataError} = this.props;\n    this.state = {\n      tiles: [],\n      tileCache: new TileCache({getTileData, maxZoom, minZoom, onGetTileDataError}),\n      isLoaded: false\n    };\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    const {onDataLoaded, onGetTileDataError} = props;\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData)\n    ) {\n      const {getTileData, maxZoom, minZoom, maxCacheSize} = props;\n      this.state.tileCache.finalize();\n      this.setState({\n        tileCache: new TileCache({\n          getTileData,\n          maxSize: maxCacheSize,\n          maxZoom,\n          minZoom,\n          onGetTileDataError\n        })\n      });\n    }\n    if (changeFlags.viewportChanged) {\n      const {viewport} = context;\n      const z = this.getLayerZoomLevel();\n      if (viewport.id !== 'DEFAULT-INITIAL-VIEWPORT') {\n        this.state.tileCache.update(viewport, tiles => {\n          const currTiles = tiles.filter(tile => tile.z === z);\n          const allCurrTilesLoaded = currTiles.every(tile => tile.isLoaded);\n          this.setState({tiles, isLoaded: allCurrTilesLoaded});\n          if (!allCurrTilesLoaded) {\n            Promise.all(currTiles.map(tile => tile.data)).then(() => {\n              this.setState({isLoaded: true});\n              onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n            });\n          } else {\n            onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n          }\n        });\n      }\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  getLayerZoomLevel() {\n    const z = Math.floor(this.context.viewport.zoom);\n    const {maxZoom, minZoom} = this.props;\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom && z > maxZoom) {\n      return maxZoom;\n    } else if (minZoom && parseInt(minZoom, 10) === minZoom && z < minZoom) {\n      return minZoom;\n    }\n    return z;\n  }\n\n  tile2long(x, z) {\n    return (x / Math.pow(2, z) * 360 - 180);\n  }\n\n  tile2lat(y, z) {\n    const n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return (180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\n  }\n\n  renderLayers() {\n    // eslint-disable-next-line no-unused-vars\n    const {getTileData, renderSubLayers, visible, ...geoProps} = this.props;\n    const zoomLevel = this.getLayerZoomLevel();\n\n    return this.state.tiles.map(tile => {\n      const { x, y, z } = tile;\n      const topLeft = [this.tile2long(x, z), this.tile2lat(y, z)];\n      const topRight = [this.tile2long(x + 1, z), this.tile2lat(y, z)];\n      const bottomLeft = [this.tile2long(x, z), this.tile2lat(y + 1, z)];\n      const bottomRight = [this.tile2long(x + 1, z), this.tile2lat(y + 1, z)];\n      const bounds = [bottomLeft, topLeft, topRight, bottomRight];\n\n      // Supported formats:\n      // - Coordinates of the bounding box of the bitmap `[minX, minY, maxX, maxY]`\n      // - Coordinates of four corners of the bitmap, should follow the sequence of `[[minX, minY], [minX, maxY], [maxX, maxY], [maxX, minY]]` \n      // each position could be `[x, y]` or `[x, y, z]` format. \n      return new BitmapLayer({\n        id: `${this.id}-${x}-${y}-${z}`,\n        image: `https://storage.googleapis.com/wri-public/Hansen17/tiles/hansen_world/v1/tc30/${z}/${x}/${y}.png`,\n        bitmapBounds: bounds,\n        desaturate: 0,\n        transparentColor: [0, 0, 0, 0],\n        visible: visible && (!this.state.isLoaded || z === zoomLevel),\n        tintColor: [255, 255, 255],\n        zoom: zoomLevel,\n        endDate: this.props.endDate,\n        fp64: true\n      })\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n","import React from 'react';\nimport DeckGL, { ScatterplotLayer } from 'deck.gl';\nimport { StaticMap } from 'react-map-gl';\nimport { MapboxLayer } from '@deck.gl/mapbox';\nimport TileLayer from 'components/tile-layer';\n\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiYWZpbGF0b3JlOTAiLCJhIjoiY2lqcml0bHoyMDBhZHZwbHhzM2Q1bnRwNSJ9.Zm2C1hNemolKnIAAWquGYg\";\n\nconst INITIAL_VIEW_STATE = {\n    longitude: -109.66698,\n    latitude: 60.74128,\n    zoom: 11\n};\n\nexport class Map extends React.Component {\n  state = {\n    endDate: 2018\n  };\n\n  // DeckGL and mapbox will both draw into this WebGL context\n  _onWebGLInitialized = (gl) => {\n    this.setState({ gl });\n  }\n\n  _onMapLoad = () => {\n    const map = this._map;\n    const deck = this._deck;\n\n    map.addLayer(new MapboxLayer({id: 'my-scatterplot', deck}));\n    map.addLayer(new MapboxLayer({id: 'bitmap-layer', deck, map: this._map}));\n  }\n\n  componentDidMount() {\n    // setInterval(() => {\n    //   this.setState(state => ({ endDate: state.endDate >= 2018 ? 2001 : state.endDate + 1 })); \n    // }, 50);\n  }\n\n  render() {\n    const { gl } = this.state;\n\n    function getTileData({x, y, z}) {\n      const mapSource = `https://storage.googleapis.com/wri-public/Hansen17/tiles/hansen_world/v1/tc30/${z}/${x}/${y}.png`;\n\n      return fetch(mapSource)\n        .then(response => response.blob())\n        .then(response => {\n          const src = URL.createObjectURL(response);\n          const image = new Image();\n\n          image.src = src;\n          return image;\n        })\n    }\n\n    const layers = [\n        new ScatterplotLayer({\n          id: 'my-scatterplot',\n          data: [\n            { position: [-74.5, 40], size: 100 }\n          ],\n          getPosition: d => d.position,\n          getRadius: d => d.size,\n          getFillColor: [255, 0, 0]\n        }),\n        new TileLayer({\n          id: 'my-tile-layer',\n          stroked: false,\n          minZoom: 3,\n          maxZoom: 12,\n          getLineColor: [192, 192, 192],\n          getFillColor: [140, 170, 180],\n          getTileData,\n          endDate: this.state.endDate\n        })\n    ];\n\n    return (\n      <DeckGL\n        ref={ref => {\n          // save a reference to the Deck instance\n          this._deck = ref && ref.deck;\n        }}\n        layers={layers}\n        initialViewState={INITIAL_VIEW_STATE}\n        controller={true}\n        onWebGLInitialized={this._onWebGLInitialized}\n      >\n        {gl && (\n          <StaticMap\n            ref={ref => {\n              // save a reference to the mapboxgl.Map instance\n              this._map = ref && ref.getMap();\n            }}\n            gl={gl}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n            onLoad={this._onMapLoad}\n          />\n        )}\n      </DeckGL>\n    );\n  }\n}\n\nexport default Map;","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport Map from 'components/map';\n\nclass App extends Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}